{"version":3,"sources":["components/graphs/barChart.tsx","components/graphs/trendLine.tsx","components/graphs/worldMap.tsx","components/graphs/graphs.tsx","components/heading.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Barchart","props","className","id","Trendline","WorldMap","useState","showYear","setShowYear","changeYear","actions","get","useEffect","disabled","onClick","year","parseInt","toString","Array","from","length","_","i","map","e","console","log","removeVegaEls","document","getElementsByClassName","getElementsByTagName","el","remove","Graphs","screenId","setScreenId","vegaEmbedModule","require","then","res","catch","error","vgGraphActions","set","view","_bind","state","update","Map","vgGraphs","element","btnDesc","blah","Heading","title","subheading","App","xmlns","viewBox","version","stroke","strokeWidth","fill","fillRule","transform","d","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d72f22f4.chunk.js","sourcesContent":["import { ChartProp } from \"types/graphProps\";\r\n\r\nconst Barchart = (props: ChartProp<HTMLElement>) => {\r\n  return (\r\n    <div className={`${props.className && props.className}`}>\r\n      <div id=\"bar-chart\" />\r\n      <br />\r\n      <span>\r\n        Since 1985, the average global temperature fluctuations has been\r\n        steadily increasing\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Barchart;\r\n","import { ChartProp } from \"types/graphProps\";\r\n\r\nconst Trendline = (props: ChartProp<HTMLElement>) => {\r\n  return (\r\n    <div className={`${props.className && props.className} flex flex-col`}>\r\n      <div className={\"flex-row\"}>\r\n        <div id=\"line-chart\" />\r\n      </div>\r\n      <br />\r\n      <span>\r\n        Since 1985, the average global temperature fluctuations has been\r\n        steadily increasing\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Trendline;\r\n","import { useEffect, useState } from \"react\";\r\nimport { ChartProp } from \"types/graphProps\";\r\n\r\nconst WorldMap = (props: ChartProp<HTMLElement>) => {\r\n  const [showYear, setShowYear] = useState<string>(\"1961\");\r\n  const changeYear = props.actions.get(\"ChangeYear\");\r\n\r\n  useEffect(() => {\r\n    !!changeYear && changeYear(showYear);\r\n  }, [showYear, changeYear]);\r\n\r\n  return (\r\n    <div\r\n      className={`${\r\n        props.className && props.className\r\n      } flex flex-col justify-center w-4/5`}\r\n    >\r\n      <div className={\"flex flex-evenly flex-nowrap gap-x-1\"}>\r\n        <button\r\n          className={`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 rounded mx-1 px-1`}\r\n          disabled={showYear === \"1961\" ? true : false}\r\n          onClick={() =>\r\n            showYear !== \"1961\" &&\r\n            setShowYear((year) => (parseInt(year) - 1).toString())\r\n          }\r\n        >\r\n          &lt;\r\n        </button>\r\n        <div\r\n          className={\r\n            \"flex cursor-move overflow-x-auto flex-nowrap gap-x-1 text-lg\"\r\n          }\r\n        >\r\n          {Array.from({ length: 2019 - 1961 }, (_, i) => i + 1961).map((e) => (\r\n            <button\r\n              key={`Y${e}`}\r\n              className={`${\r\n                e.toString() === showYear ? \"bg-blue-500 text-white\" : \"\"\r\n              } rounded p-1`}\r\n              onClick={() =>\r\n                e.toString() !== showYear && setShowYear(e.toString())\r\n              }\r\n            >\r\n              {e}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        <button\r\n          className={`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 rounded mx-1 px-1`}\r\n          disabled={showYear === \"2019\" ? true : false}\r\n          onClick={() =>\r\n            showYear !== \"2019\" &&\r\n            setShowYear((year) => (parseInt(year) + 1).toString())\r\n          }\r\n        >\r\n          &gt;\r\n        </button>\r\n      </div>\r\n      <div className={\"flex justify-center my-2\"}>\r\n        <div id=\"chloropleth\" />\r\n      </div>\r\n      <br />\r\n      <span></span>\r\n      <button\r\n        id=\"eh\"\r\n        onClick={() => console.log(props.actions.get(\"ChangeYear\")!(\"2000\"))}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorldMap;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport vegaEmbedModule from \"vega-embed\";\r\nimport Barchart from \"./barChart\";\r\nimport Trendline from \"./trendLine\";\r\nimport WorldMap from \"./worldMap\";\r\n\r\ntype VgChart = {\r\n  element: React.ReactElement<any, any>;\r\n  btnDesc: string;\r\n};\r\n\r\nconst removeVegaEls = () => {\r\n  const vegaEls = [\r\n    ...Array.from(document.getElementsByClassName(\"vega-bindings\")),\r\n    ...Array.from(document.getElementsByTagName(\"details\")),\r\n  ];\r\n  vegaEls.map((el) => el.remove());\r\n};\r\n\r\nconst Graphs = (props: React.HTMLAttributes<HTMLDivElement>) => {\r\n  const [screenId, setScreenId] = useState(0);\r\n  var blah: any;\r\n\r\n  useEffect(() => {\r\n    vegaEmbedModule(\"#line-chart\", require(\"./vgjson/line_chart.json\"))\r\n      .then(function (res) {\r\n        removeVegaEls();\r\n        console.log(res);\r\n      })\r\n      .catch(console.error);\r\n\r\n    vegaEmbedModule(\"#bar-chart\", require(\"./vgjson/bar_chart.json\"))\r\n      .then(function (res) {\r\n        removeVegaEls();\r\n        console.log(res);\r\n      })\r\n      .catch(console.error);\r\n\r\n    vegaEmbedModule(\"#chloropleth\", require(\"./vgjson/chloropleth.json\"))\r\n      .then(function (res: any) {\r\n        removeVegaEls();\r\n        console.log(res);\r\n        vgGraphActions.set(\r\n          \"ChangeYear\",\r\n          res.view._bind[0].state.update as VoidFunction\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const vgGraphActions: Map<string, VoidFunction> = new Map();\r\n\r\n  const vgGraphs: VgChart[] = [\r\n    {\r\n      element: (\r\n        <WorldMap\r\n          key=\"graph-1\"\r\n          className={`${screenId !== 0 && \"hidden\"}`}\r\n          actions={vgGraphActions}\r\n        />\r\n      ),\r\n      btnDesc: \"World Map\",\r\n    },\r\n    {\r\n      element: (\r\n        <Barchart\r\n          key=\"graph-2\"\r\n          className={`${screenId !== 1 && \"hidden\"}`}\r\n          actions={vgGraphActions}\r\n        />\r\n      ),\r\n      btnDesc: \"Bar chart\",\r\n    },\r\n    {\r\n      element: (\r\n        <Trendline\r\n          key=\"graph-3\"\r\n          className={`${screenId !== 2 && \"hidden\"}`}\r\n          actions={vgGraphActions}\r\n        />\r\n      ),\r\n      btnDesc: \"Trends\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={`${props.className && props.className} w-full`}>\r\n      <div className={`flex justify-evenly align-top gap-x-2`}>\r\n        {vgGraphs.map(({ btnDesc }, i) => (\r\n          <button\r\n            key={`switch-graph-${i}`}\r\n            className={\r\n              \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded flex-1\"\r\n            }\r\n            onClick={() => setScreenId(i)}\r\n          >\r\n            {btnDesc}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <br />\r\n      {vgGraphs.map(({ element }, i) => element)}\r\n      <button onClick={() => blah(2000)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graphs;\r\n","type HeadingProps = {\r\n  title: string;\r\n  subheading: string;\r\n};\r\n\r\nconst Heading = (\r\n  props: React.HTMLAttributes<HTMLElement> & HeadingProps\r\n): React.ClassicElement<HTMLElement> => {\r\n  return (\r\n    <div className={\"relative\"}>\r\n      <h1 className={\"text-blue-500 text-6xl\"}>{props.title}</h1>\r\n      <br />\r\n      <h2 className={\"text-2xl\"}>{props.subheading}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import Sidebar from \"./components/sidebar/sidebar\";\r\nimport Graphs from \"./components/graphs/graphs\";\r\nimport Heading from \"components/heading\";\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={\"bg-gray-100 pt-2 pl-2 pr-2\"}>\r\n      <div className=\"fill-current text-blue-300 z-0 absolute w-full\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 1440 600\"\r\n          version=\"1.1\"\r\n        >\r\n          <g\r\n            id=\"Design-V2\"\r\n            stroke=\"none\"\r\n            strokeWidth=\"1\"\r\n            fill=\"none\"\r\n            fillRule=\"evenodd\"\r\n          >\r\n            <g\r\n              id=\"V2-Landing-Copy\"\r\n              transform=\"translate(-720.000000, 0.000000)\"\r\n              fill=\"#DDF0F9\"\r\n            >\r\n              <path\r\n                d=\"M720,100 C840,33.3333333 960,0 1080,0 C1200,0 1320,33.3333333 1440,100 C1560,166.666667 1680,200 1800,200 C1920,200 2040,166.666667 2160,100 L2160,611 L720,611 L720,100 Z\"\r\n                id=\"Path-2\"\r\n                transform=\"translate(1440.000000, 305.500000) scale(1, -1) translate(-1440.000000, -305.500000) \"\r\n              />\r\n            </g>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n      <div className={\"body p-10 min-h-screen\"}>\r\n        <div className={\"relative\"}>\r\n          <Heading\r\n            title={\"Global Warming, Visualised\"}\r\n            subheading={\"An interactive visualisation\"}\r\n          />\r\n          <br />\r\n          <Graphs className={\"flex flex-col items-center w-4/5\"} />\r\n          {/* <Sidebar className=\"fixed\" /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <footer\r\n        className={\r\n          \"footer bg-white relative mt-10 pt-2 border-b-2 border-blue-300 text-center bottom-0\"\r\n        }\r\n      >\r\n        <div className=\"container mx-auto px-6 flex flex-col\">\r\n          <span>FIT3179 Assignment 2</span>\r\n          <span className=\"text-sm text-blue-500 font-bold mb-2\">\r\n            © Glorison Lai | 30587220\r\n          </span>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}