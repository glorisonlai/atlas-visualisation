{"version":3,"sources":["components/graphs/barChart.tsx","components/graphs/trendLine.tsx","components/graphs/worldMap.tsx","components/graphs/graphs.tsx","components/heading.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Barchart","props","className","id","Trendline","WorldMap","useState","showYear","setShowYear","autoPlay","setAutoPlay","stepSize","setStepSize","changeYear","actions","get","scrollRef","useRef","stepIntervalRef","useEffect","current","scrollTo","parseInt","clearInterval","setInterval","year","Math","min","toString","disabled","onClick","innerRef","Array","from","length","_","i","map","e","type","name","onChange","checked","htmlFor","target","value","max","console","log","removeVegaEls","document","getElementsByClassName","getElementsByTagName","el","remove","Graphs","screenId","setScreenId","vegaEmbedModule","require","then","res","catch","error","vgGraphActions","set","view","_bind","state","update","Map","vgGraphs","element","btnDesc","blah","Heading","title","subheading","App","xmlns","viewBox","version","stroke","strokeWidth","fill","fillRule","transform","d","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.55cc5039.chunk.js","sourcesContent":["import { ChartProp } from \"types/graphProps\";\r\n\r\nconst Barchart = (props: ChartProp<HTMLElement>) => {\r\n  return (\r\n    <div className={`${props.className && props.className}`}>\r\n      <div id=\"bar-chart\" />\r\n      <br />\r\n      <span>\r\n        Since 1985, the average global temperature fluctuations has been\r\n        steadily increasing\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Barchart;\r\n","import { ChartProp } from \"types/graphProps\";\r\n\r\nconst Trendline = (props: ChartProp<HTMLElement>) => {\r\n  return (\r\n    <div className={`${props.className && props.className} flex flex-col`}>\r\n      <div className={\"flex-row\"}>\r\n        <div id=\"line-chart\" />\r\n      </div>\r\n      <br />\r\n      <span>\r\n        Since 1985, the average global temperature fluctuations has been\r\n        steadily increasing\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default Trendline;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport ScrollContainer from \"react-indiana-drag-scroll\";\r\nimport { ChartProp } from \"types/graphProps\";\r\n\r\nconst WorldMap = (props: ChartProp<HTMLElement>) => {\r\n  const [showYear, setShowYear] = useState<string>(\"1961\");\r\n  const [autoPlay, setAutoPlay] = useState<boolean>(true);\r\n  const [stepSize, setStepSize] = useState<number>(5);\r\n  const changeYear = props.actions.get(\"ChangeYear\");\r\n  const scrollRef: any = useRef(null);\r\n  const stepIntervalRef: any = useRef(null);\r\n\r\n  useEffect(() => {\r\n    !!changeYear && changeYear(showYear);\r\n    !!scrollRef.current &&\r\n      scrollRef.current.scrollTo((parseInt(showYear) - 1968) * 54.5 + 15, 0);\r\n  }, [showYear, changeYear]);\r\n\r\n  useEffect(() => {\r\n    clearInterval(stepIntervalRef.current);\r\n    if (autoPlay) {\r\n      stepIntervalRef.current = setInterval(\r\n        () =>\r\n          setShowYear((year) =>\r\n            Math.min(2019, parseInt(year) + stepSize).toString()\r\n          ),\r\n        5000\r\n      );\r\n    }\r\n  }, [autoPlay, stepSize]);\r\n\r\n  return (\r\n    <div\r\n      className={`${\r\n        props.className && props.className\r\n      } flex flex-col justify-center w-chart`}\r\n    >\r\n      <div className={\"flex flex-evenly flex-nowrap gap-x-1\"}>\r\n        <button\r\n          className={`${\r\n            showYear !== \"1961\"\r\n              ? \"bg-blue-500 hover:bg-blue-700\"\r\n              : \"bg-gray-500\"\r\n          } text-white font-bold py-2 rounded mx-1 px-1`}\r\n          disabled={showYear === \"1961\" ? true : false}\r\n          onClick={() => {\r\n            if (showYear !== \"2019\") {\r\n              setShowYear((year) => (parseInt(year) + 1).toString());\r\n              setAutoPlay(false);\r\n            }\r\n          }}\r\n        >\r\n          &lt;\r\n        </button>\r\n        <ScrollContainer\r\n          className=\"scroll-container flex flex-nowrap gap-3 px-4 drop-shadow-xl shadow-xl rounded bg-gray-200\"\r\n          innerRef={scrollRef}\r\n        >\r\n          {Array.from({ length: 2019 - 1961 + 1 }, (_, i) => i + 1961).map(\r\n            (e) => (\r\n              <button\r\n                key={`Y${e}`}\r\n                className={`${\r\n                  e.toString() === showYear\r\n                    ? \"bg-blue-500 text-white bold text-xl px-2\"\r\n                    : \"\"\r\n                } rounded p-1`}\r\n                onClick={() => {\r\n                  if (e.toString() !== showYear) {\r\n                    setShowYear(e.toString());\r\n                    setAutoPlay(false);\r\n                  }\r\n                }}\r\n              >\r\n                {e}\r\n              </button>\r\n            )\r\n          )}\r\n        </ScrollContainer>\r\n\r\n        <button\r\n          className={`${\r\n            showYear !== \"2019\"\r\n              ? \"bg-blue-500 hover:bg-blue-700\"\r\n              : \"bg-gray-500\"\r\n          } text-white font-bold py-2 rounded mx-1 px-1`}\r\n          disabled={showYear === \"2019\" ? true : false}\r\n          onClick={() => {\r\n            if (showYear !== \"2019\") {\r\n              setShowYear((year) => (parseInt(year) + 1).toString());\r\n              setAutoPlay(false);\r\n            }\r\n          }}\r\n        >\r\n          &gt;\r\n        </button>\r\n      </div>\r\n      <div\r\n        className={\r\n          \"flex flex-center flex-nowrap gap-x-5 p-y-2 items-center py-2\"\r\n        }\r\n      >\r\n        <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"AutoScroll\"\r\n            name=\"AutoScroll\"\r\n            onChange={() => setAutoPlay((checked) => !checked)}\r\n            checked={autoPlay}\r\n          />\r\n          <label className={\"px-2\"} htmlFor=\"AutoScroll\">\r\n            Auto-Scroll\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            type=\"number\"\r\n            id=\"StepSize\"\r\n            name=\"StepSize\"\r\n            onChange={(e) => setStepSize(parseInt(e.target.value))}\r\n            value={stepSize}\r\n            min={1}\r\n            max={2019 - 1961}\r\n          />\r\n          <label className={\"px-2\"} htmlFor=\"StepSize\">\r\n            Step size\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div className={\"my-2\"}>\r\n        <div id=\"chloropleth\" />\r\n      </div>\r\n      <br />\r\n      <span></span>\r\n      <button\r\n        id=\"eh\"\r\n        onClick={() => console.log(props.actions.get(\"ChangeYear\")!(\"2000\"))}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorldMap;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport vegaEmbedModule from \"vega-embed\";\r\nimport Barchart from \"./barChart\";\r\nimport Trendline from \"./trendLine\";\r\nimport WorldMap from \"./worldMap\";\r\n\r\ntype VgChart = {\r\n  element: React.ReactElement<any, any>;\r\n  btnDesc: string;\r\n};\r\n\r\nconst removeVegaEls = () => {\r\n  const vegaEls = [\r\n    ...Array.from(document.getElementsByClassName(\"vega-bindings\")),\r\n    ...Array.from(document.getElementsByTagName(\"details\")),\r\n  ];\r\n  vegaEls.map((el) => el.remove());\r\n};\r\n\r\nconst Graphs = (props: React.HTMLAttributes<HTMLDivElement>) => {\r\n  const [screenId, setScreenId] = useState(0);\r\n  var blah: any;\r\n\r\n  useEffect(() => {\r\n    vegaEmbedModule(\"#line-chart\", require(\"./vgjson/line_chart.json\"))\r\n      .then(function (res) {\r\n        removeVegaEls();\r\n        console.log(res);\r\n      })\r\n      .catch(console.error);\r\n\r\n    vegaEmbedModule(\"#bar-chart\", require(\"./vgjson/bar_chart.json\"))\r\n      .then(function (res) {\r\n        removeVegaEls();\r\n        console.log(res);\r\n      })\r\n      .catch(console.error);\r\n\r\n    vegaEmbedModule(\"#chloropleth\", require(\"./vgjson/chloropleth.json\"))\r\n      .then(function (res: any) {\r\n        removeVegaEls();\r\n        console.log(res);\r\n        vgGraphActions.set(\r\n          \"ChangeYear\",\r\n          res.view._bind[0].state.update as VoidFunction\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const vgGraphActions: Map<string, VoidFunction> = new Map();\r\n\r\n  const vgGraphs: VgChart[] = [\r\n    {\r\n      element: (\r\n        <WorldMap\r\n          key=\"graph-1\"\r\n          className={`${screenId !== 0 && \"hidden\"}`}\r\n          actions={vgGraphActions}\r\n        />\r\n      ),\r\n      btnDesc: \"World Map\",\r\n    },\r\n    {\r\n      element: (\r\n        <Barchart\r\n          key=\"graph-2\"\r\n          className={`${screenId !== 1 && \"hidden\"}`}\r\n          actions={vgGraphActions}\r\n        />\r\n      ),\r\n      btnDesc: \"Bar chart\",\r\n    },\r\n    {\r\n      element: (\r\n        <Trendline\r\n          key=\"graph-3\"\r\n          className={`${screenId !== 2 && \"hidden\"}`}\r\n          actions={vgGraphActions}\r\n        />\r\n      ),\r\n      btnDesc: \"Trends\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className={`${\r\n        props.className && props.className\r\n      } w-full overflow-x-hidden`}\r\n    >\r\n      <div className={`flex justify-evenly align-top gap-x-2`}>\r\n        {vgGraphs.map(({ btnDesc }, i) => (\r\n          <button\r\n            key={`switch-graph-${i}`}\r\n            className={\r\n              \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded flex-1\"\r\n            }\r\n            onClick={() => setScreenId(i)}\r\n          >\r\n            {btnDesc}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <br />\r\n      {vgGraphs.map(({ element }, i) => element)}\r\n      <button onClick={() => blah(2000)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graphs;\r\n","type HeadingProps = {\r\n  title: string;\r\n  subheading: string;\r\n};\r\n\r\nconst Heading = (\r\n  props: React.HTMLAttributes<HTMLElement> & HeadingProps\r\n): React.ClassicElement<HTMLElement> => {\r\n  return (\r\n    <div className={\"relative\"}>\r\n      <h1 className={\"text-blue-500 text-6xl\"}>{props.title}</h1>\r\n      <br />\r\n      <h2 className={\"text-2xl\"}>{props.subheading}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import Sidebar from \"./components/sidebar/sidebar\";\r\nimport Graphs from \"./components/graphs/graphs\";\r\nimport Heading from \"components/heading\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={\"bg-gray-100\"}>\r\n      <div className=\"fill-current text-blue-300 z-0 absolute w-full\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 1440 600\"\r\n          version=\"1.1\"\r\n        >\r\n          <g\r\n            id=\"Design-V2\"\r\n            stroke=\"none\"\r\n            strokeWidth=\"1\"\r\n            fill=\"none\"\r\n            fillRule=\"evenodd\"\r\n          >\r\n            <g\r\n              id=\"V2-Landing-Copy\"\r\n              transform=\"translate(-720.000000, 0.000000)\"\r\n              fill=\"#DDF0F9\"\r\n            >\r\n              <path\r\n                d=\"M720,100 C840,33.3333333 960,0 1080,0 C1200,0 1320,33.3333333 1440,100 C1560,166.666667 1680,200 1800,200 C1920,200 2040,166.666667 2160,100 L2160,611 L720,611 L720,100 Z\"\r\n                id=\"Path-2\"\r\n                transform=\"translate(1440.000000, 305.500000) scale(1, -1) translate(-1440.000000, -305.500000) \"\r\n              />\r\n            </g>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n      <div className={\"body p-10 min-h-screen\"}>\r\n        <div className={\"relative\"}>\r\n          <Heading\r\n            title={\"Global Warming, Visualised\"}\r\n            subheading={\"An interactive visualisation\"}\r\n          />\r\n          <br />\r\n          <Graphs className={\"flex flex-col items-center w-4/5\"} />\r\n          {/* <Sidebar className=\"fixed\" /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <footer\r\n        className={\r\n          \"footer bg-white relative mt-10 pt-2 border-b-4 border-blue-300 text-center\"\r\n        }\r\n      >\r\n        <div className=\"container mx-auto px-6 flex flex-col\">\r\n          <span>FIT3179 Assignment 2</span>\r\n          <span className=\"text-sm text-blue-500 font-bold mb-2\">\r\n            © Glorison Lai | 30587220\r\n          </span>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}